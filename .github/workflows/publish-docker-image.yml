---
name: Publish Docker image
on:
  push:
    branches:
      - main
  schedule:
    # Rebuild weekly
    - cron:  '0 0 * * 0'

permissions:
  contents: read
  packages: write

jobs:
  build-container:
    strategy:
      matrix:
        config:
          - container_name: join
          - container_name: smbd
          - container_name: winbind
    name: Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          submodules: true
      # Disable cache for weekly automatic rebuilds
      #- name: Setup Cache for Docker layers
      #  uses: actions/cache@v2
      #  with:
      #    path: /tmp/.buildx-cache
      #    key: ${{ runner.os }}-buildx-${{ matrix.config.container_name }}-${{ github.sha }}
      #    restore-keys: |
      #      ${{ runner.os }}-buildx-${{ matrix.config.container_name }}
      #- name: Set up QEMU for Multi Arch builds
      #  uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx for Multi Arch builds and Caching
        uses: docker/setup-buildx-action@v1
      #- name: Log in to Docker Hub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@548e2346a9987b56d8a4104fe776321ff8e23440
        with:
          images: "ghcr.io/${{ github.repository }}/${{ matrix.config.container_name }}"

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.config.container_name }}
          push: false
          #platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
        uses: anchore/scan-action@main
        with:
          image: ${{ steps.meta.outputs.tags }}
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
